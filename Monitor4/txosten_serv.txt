struct sockaddr_in dirSer, dirCli;

idSocketServ = socker(AF_INET, SOCK_STREAM, 0); //crear el socker servidor para la aceptación de conexiones

memset(&dirServ, 0, sizeof(dirServ)); // Poner a 0 la dirección del servidor
	bzero ((char*) &dirServ, sizeof(dirServ));
	
// Asigna valores a la dirección del servidor
	dirServ.sin_family = AF_INET;
	dirServ.sin_addr.s_addr = INADDR_ANY;
	dirServ.sin_port = htons(5000);
	
// Asignar la dirección al socket servidor para la aceptación de conexiones
	bind (idSocketServ, (struct sockaddr*) &dirServ, sizeof(dirServ));
	
listen (idSockServ, 5); // prepara el servidor 

idSockCli = accept (idSockCli, (char *) mensaje, sizeof(mensaje)); // acepta conexión y obtenene un identificador de socker para la transferencia

//Recibe datos
	read (idSockCli, (char *) mensaje, sizeof (mensaje));
	
//Envia datos
	write (idSockCli, (char *) mensaje, sizeof (mensaje));

// Cierra socket de la transferencia
	close (idSockCli);

// Cierra socker servidor de la aceptacíón de conexiones
	close (idSockServ);	
